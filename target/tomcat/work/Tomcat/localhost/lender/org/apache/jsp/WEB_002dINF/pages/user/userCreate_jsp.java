/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-12-30 02:49:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userCreate_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/pub/js/kindeditor-4.1.10/themes/default/default.css\" type=\"text/css\" rel=\"stylesheet\">\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/pub/js/kindeditor-4.1.10/kindeditor-all-min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" charset=\"utf-8\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/pub/js/kindeditor-4.1.10/lang/zh_CN.js\"></script>\r\n");
      out.write("<div style=\"padding:10px 10px 10px 10px\">\r\n");
      out.write("\t<form id=\"userAddForm\" class=\"itemForm\" method=\"post\">\r\n");
      out.write("\t    <table cellpadding=\"5\">\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>用户名:</td>\r\n");
      out.write("\t            <td><input id=\"username\" class=\"easyui-validatebox\" type=\"text\" name=\"username\" data-options=\"required:true\" missingMessage=\"用户名必须填写\"  validtype=\"accountName['");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/checkName.html','account']\" style=\"width: 280px;\"></input></td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>密码:</td>\r\n");
      out.write("\t            <td><input id=\"password\" class=\"easyui-validatebox\" type=\"password\" name=\"password\" data-options=\"required:true\" missingMessage=\"密码必须填写\" invalidMessage=\"6-20位 \" validtype=\"password[6,20]\" />\r\n");
      out.write("\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>确认密码:</td>\r\n");
      out.write("\t            <td><input class=\"easyui-validatebox\" type=\"password\"  data-options=\"required:true\"  missingMessage=\"确认密码必须填写\" invalidMessage=\"两次输入密码不匹配\" validtype=\"equalTo['#password']\" />\r\n");
      out.write("\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>真实名字:</td>\r\n");
      out.write("\t            <td><input class=\"easyui-validatebox\" type=\"text\" name=\"name\" data-options=\"required:true\" style=\"width: 280px;\"></input></td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>手机号:</td>\r\n");
      out.write("\t            <td><input class=\"easyui-validatebox\" type=\"text\" name=\"phone\" data-options=\"required:true\" validtype=\"mobile\"/></td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>角色:</td>\r\n");
      out.write("\t            <td>\r\n");
      out.write("\t                <input id=\"roleId\" class=\"easyui-combobox\" name=\"roleId\" data-options=\"valueField: 'id',  textField: 'name', url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/role/findRoles.html'\"  />\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>邮箱:</td>\r\n");
      out.write("\t            <td>\r\n");
      out.write("\t                <input class=\"easyui-validatebox\" type=\"text\" name=\"email\" data-options=\"required:true\" validType=\"email\" missingMessage=\"邮箱必须填写\" invalidMessage=\"请填写正确的邮箱格式\" />\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>用户头像:</td>\r\n");
      out.write("\t            <td>\r\n");
      out.write("\t            \t <a href=\"javascript:void(0)\" class=\"easyui-linkbutton picFileUpload\">上传图片</a>\r\n");
      out.write("\t                 <input type=\"hidden\" name=\"picture\"/>\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t        <tr>\r\n");
      out.write("\t            <td>用户描述:</td>\r\n");
      out.write("\t            <td>\r\n");
      out.write("\t                <textarea style=\"width:800px;height:300px;visibility:hidden;\" name=\"description\"></textarea>\r\n");
      out.write("\t            </td>\r\n");
      out.write("\t        </tr>\r\n");
      out.write("\t    </table>\r\n");
      out.write("\t   \r\n");
      out.write("\t</form>\r\n");
      out.write("\t<div style=\"padding:5px\">\r\n");
      out.write("\t    <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick=\"submitForm()\">提交</a>\r\n");
      out.write("\t    <a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick=\"clearForm()\">重置</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar userAddEditor ;\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t//和form下的desc组件绑定\r\n");
      out.write("\t\tuserAddEditor = KindEditorUtil.createEditor(\"#userAddForm [name=description]\");\r\n");
      out.write("\t\tKindEditorUtil.init({fun:function(node){\r\n");
      out.write("\t\t\tKindEditorUtil.changeItemParam(node, \"userAddForm\");\r\n");
      out.write("\t\t}});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t//验证手机号码的合法性\r\n");
      out.write("\t$.extend($.fn.validatebox.defaults.rules, {\r\n");
      out.write("\t\t\r\n");
      out.write("\t    accountName: {  \r\n");
      out.write("            validator: function (value, param) {  \r\n");
      out.write("                if (!/^[a-zA-Z][a-zA-Z0-9_]{3,15}$/i.test(value)) {  \r\n");
      out.write("                    $.fn.validatebox.defaults.rules.accountName.message = '账户名称不合法（字母开头，允许4-16字节，允许字母数字下划线）';  \r\n");
      out.write("                    return false;  \r\n");
      out.write("                } else {  \r\n");
      out.write("                    var postdata = {};  \r\n");
      out.write("                    postdata={\"username\":$(\"#username\").val().trim()};\r\n");
      out.write("                    var result = $.ajax({  \r\n");
      out.write("                        url: param[0],  \r\n");
      out.write("                        data: postdata,  \r\n");
      out.write("                        type: 'post',  \r\n");
      out.write("                        dataType: 'json',  \r\n");
      out.write("                        async: false,  \r\n");
      out.write("                        cache: false\r\n");
      out.write("                    }).responseText;  \r\n");
      out.write("                    var json=jQuery.parseJSON(result);\r\n");
      out.write("                    if (json.status == 100) {  \r\n");
      out.write("                        $.fn.validatebox.defaults.rules.accountName.message = '账户名称已存在！';  \r\n");
      out.write("                        return false;  \r\n");
      out.write("                    } else {  \r\n");
      out.write("                        return true;  \r\n");
      out.write("                    }  \r\n");
      out.write("                }  \r\n");
      out.write("            },  \r\n");
      out.write("            message: ''  \r\n");
      out.write("        },  \r\n");
      out.write("\t    password:{\r\n");
      out.write("\t\t\t   validator: function (value, param) {\r\n");
      out.write("\t\t            if (value.length<param[0] || value.length>param[1]) {\r\n");
      out.write("\t\t                $.fn.validatebox.defaults.rules.password.message = '密码长度必须在' + param[0] + '至' + param[1] + '范围';\r\n");
      out.write("\t\t                return false;\r\n");
      out.write("\t\t            } else {\r\n");
      out.write("\t\t                return true;\r\n");
      out.write("\t\t            }\r\n");
      out.write("\t\t        }, message: ''\r\n");
      out.write("\t\t },\r\n");
      out.write("\t\t/*必须和某个字段相等*/\r\n");
      out.write("        equalTo: { \r\n");
      out.write("        \tvalidator: function (value, param) {\r\n");
      out.write("        \t\treturn $(param[0]).val() == value; \r\n");
      out.write("        \t\t}, message: '字段不匹配'\r\n");
      out.write("        },\r\n");
      out.write("\t    //移动手机号码验证 \r\n");
      out.write("\t    mobile: {//value值为文本框中的值 \r\n");
      out.write("\t        validator: function (value) {\r\n");
      out.write("\t            var reg = /^1[3|4|5|8|9]\\d{9}$/; \r\n");
      out.write("\t            return reg.test(value); \r\n");
      out.write("\t        }, \r\n");
      out.write("\t        message: '输入手机号码格式不准确.' \r\n");
      out.write("\t    } \r\n");
      out.write("\t})\r\n");
      out.write("\tfunction submitForm(){\r\n");
      out.write("\t\t//表单校验\r\n");
      out.write("\t\tif(!$('#userAddForm').form('validate')){\r\n");
      out.write("\t\t\t$.messager.alert('提示','表单还未填写完成!');\r\n");
      out.write("\t\t\treturn ;\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\tuserAddEditor.sync();//将输入的内容同步到多行文本中\r\n");
      out.write("\t\tvar paramJson = [];\r\n");
      out.write("\t\t$(\"#userAddForm .params li\").each(function(i,e){\r\n");
      out.write("\t\t\tvar trs = $(e).find(\"tr\");\r\n");
      out.write("\t\t\tvar group = trs.eq(0).text();\r\n");
      out.write("\t\t\tvar ps = [];\r\n");
      out.write("\t\t\tfor(var i = 1;i<trs.length;i++){\r\n");
      out.write("\t\t\t\tvar tr = trs.eq(i);\r\n");
      out.write("\t\t\t\tps.push({\r\n");
      out.write("\t\t\t\t\t\"k\" : $.trim(tr.find(\"td\").eq(0).find(\"span\").text()),\r\n");
      out.write("\t\t\t\t\t\"v\" : $.trim(tr.find(\"input\").val())\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tparamJson.push({\r\n");
      out.write("\t\t\t\t\"group\" : group,\r\n");
      out.write("\t\t\t\t\"params\": ps\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\tparamJson = JSON.stringify(paramJson);//将对象转化为json字符串\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#userAddForm [name=userParams]\").val(paramJson);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/save.html\",$(\"#userAddForm\").serialize(), function(data){\r\n");
      out.write("\t\t\tif(data.status == 200){\r\n");
      out.write("\t\t\t\t$.messager.alert('提示','新增用户成功!');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction clearForm(){\r\n");
      out.write("\t\t$('#userAddForm').form('reset');\r\n");
      out.write("\t\titemAddEditor.html('');\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
